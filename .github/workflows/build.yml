name: 自动构建与发布

on:
  push:
    branches:
      - main
      - dev
      - hotfix/*

jobs:
  build:
    name: PyInstaller构建
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.11.7]

    steps:
      - name: Checkout 代码
        uses: actions/checkout@v3
      
      - name: 安装Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: 安装依赖
        run: pip install -r requirements.txt
      
      - name: 安装PyInstaller
        run: pip install pyinstaller
      
      - name: 通过PyInstaller构建
        run: |
          pyinstaller --onefile --windowed -y -i icon.${{ matrix.os == 'windows-latest' && 'ico' || matrix.os == 'macos-latest' && 'icns' }} GUI.py
        shell: bash
      
      # 注意这里的变化：使用的是工件的名字而不是具体的文件名
      - name: 上传工程
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.os }}
          path: dist/
      
      - name: 列出构建文件
        run: ls -l dist

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v3
      
      - name: 自动版本标签
        id: tag_version
        uses: actions/github-script@v6
        with:
          script: |
            const path = require('path');
            const fs = require('fs');
            const { repo: { owner, repo } } = context;
            let tags = await github.rest.repos.listTags({
              owner: owner,
              repo: repo,
            });
            tags = tags.data.map(tag => tag.name);
            let newTag = 'v1.0.0';
           if (tags.length > 0) {
              const latestTag = tags.sort().pop();
              let [major, minor, patch] = latestTag.replace('v', '').split('.').map(num => parseInt(num));
              
              if (patch === 9) {
                minor += 1;
                patch = 0;
              } else {
                patch += 1;
              }

              if (minor === 10) {
                major += 1;
                minor = 0;
              }

              newTag = `v${major}.${minor}.${patch}`;
              while (tags.includes(newTag)) {
                if (patch === 9) {
                  minor += 1;
                  patch = 0;
                } else {
                  patch += 1;
                }
                if (minor === 10) {
                  major += 1;
                  minor = 0;
                }
                newTag = `v${major}.${minor}.${patch}`;
              }
            }
            fs.writeFileSync(process.env.GITHUB_ENV, `NEW_TAG=${newTag}\n`, { flag: 'a' });
      
      - name: 创建发布
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          draft: true
          prerelease: false
      
      - name: 下载构建工程
        uses: actions/download-artifact@v3
        with:
          name: app-${{ matrix.os }}
      
      - name: 上传构建至发布
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ env.NEW_TAG }}
